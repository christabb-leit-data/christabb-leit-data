Option Ref,Task ID,Title,Description,Complexity,Primary Role,Predecessors,Client Dependencies,Deliverables,Acceptance Criteria,Orchestration Integration,Monitoring & Alerting,Schedule / Frequency,Notes
F.01.1.A,F01.1.A.T01,Define vendor evaluation criteria,"Create a scored matrix covering source coverage, CDC method, schema drift handling, private networking, SLAs, pricing model, and API/DAG integrations.",Medium,SDA,,List of source systems and compliance constraints; security & procurement requirements,Evaluation matrix; recommendation brief,"Matrix complete, approved by PDA and Security",,,,Include Snowflake Partner Connect availability; confirm support for required sources
F.01.1.A,F01.1.A.T02,Spin up PoC via Snowflake Partner Connect,Use Partner Connect to create a trial account with shortlisted vendor and auto-provision Snowflake objects; validate basic end-to-end load.,Low,DE,F01.1.A.T01,ACCOUNTADMIN access to Snowflake; ability to use Partner Connect,Working PoC connection and first sync,Initial tables replicated to Snowflake; credentials stored in secret manager,,,,
F.01.1.A,F01.1.A.T03,Private networking design (PrivateLink / PSC),Decide on private networking with the vendor (AWS PrivateLink / Azure Private Link / GCP PSC). Produce sequence to enable and validate endpoints.,High,SDA,F01.1.A.T02,Target cloud & region; Snowflake edition; vendor account details,Network design + allowlists; implementation plan,Connectivity validated privately (no public egress),,,,Coordinate with Snowflake and vendor to exchange service attachment IDs / VPC endpoints
F.01.1.A,F01.1.A.T04,RBAC & least-privilege design for destination,Define destination database/schema/warehouse and create service roles and grants following least-privilege; separate read vs. load roles.,Medium,SDA,F01.1.A.T02,Snowflake security policies; list of target databases/schemas,"DDL scripts for roles, users, grants; runbook",Successful principle-of-least-privilege review,,,,
F.01.1.A,F01.1.A.T05,Cost & capacity planning,Estimate vendor costs and Snowflake compute/storage impact. Size warehouses for initial load and steady-state CDC. Define usage monitors.,Medium,SDA,F01.1.A.T02,Source data volumes and change rates; pricing tiers; business SLAs,Cost model; warehouse sizing; resource monitors,Stakeholder sign-off on forecast,,,,
F.01.1.A,F01.1.A.T06,Inventory & prioritize source tables,"Compile table list, identify primary keys and update timestamps, classify tables by change rate and criticality.",Medium,DE,F01.1.A.T01,Access to source data dictionary; SME time,Table inventory spreadsheet; priority tags,Top-priority tables agreed with business,,,,
F.01.1.A,F01.1.A.T07,Identify referential integrity & dependency groups (from SOURCE catalogs),"Extract FK relationships from the SOURCE system catalogs (e.g., SQL Server sys.foreign_keys/sys.foreign_key_columns; Oracle ALL_CONSTRAINTS/ALL_CONS_COLUMNS; MySQL INFORMATION_SCHEMA.KEY_COLUMN_USAGE; PostgreSQL information_schema.referential_constraints). Build dependency groups ensuring parent tables precede children in orchestration.",Medium,SDE,F01.1.A.T06,Access to source schema FK metadata (or modeled FKs),Dependency graph; table group assignments,Graph reviewed; grouping rules captured for DAGs,,,,Do NOT rely on Snowflake constraints; replicated targets may not carry/enforce FKs.
F.01.1.A,F01.1.A.T08,Naming & schema evolution policy,"Decide destination naming (source vs vendor naming), case strategy, and rules for schema drift (new columns, PK changes).",Low,SDA,F01.1.A.T06,Vendor capabilities; downstream consumer preferences,Naming convention doc; drift handling policy,Policy approved by data governance,,,,
F.01.1.A,F01.1.A.T09,Destination schema & warehouse provisioning,Create destination DB/Schema(s) and dedicated warehouses for ingestion and analytics; configure auto-suspend/resume.,Low,DE,F01.1.A.T04,Snowflake admin access,Provisioned DB/Schema/Warehouse objects,Test queries succeed; cost guardrails in place,,,,
F.01.1.A,F01.1.A.T10,Standardize metadata columns,"Define and document metadata columns including vendor system columns and LEIT standard fields (ingestion_ts, source_system, load_batch_id).",Low,DE,F01.1.A.T08,Agreement on metadata model; vendor capabilities,Metadata column spec; downstream usage notes,Columns present in sample replicated tables,,,,
F.01.1.A,F01.1.A.T11,Create reference tables for registry & dependencies,"Create reference tables to register sources, tables, sync settings, and dependency groups for orchestration.",Medium,SDE,F01.1.A.T07,Snowflake DDL privileges,"REF_TABLE_REGISTRY, REF_DEPENDENCY_GROUPS, REF_SLA tables",Tables populated with first cut of data,,,,
F.01.1.A,F01.1.A.T12,Configure connector authentication,Create destination user/role and secrets; configure vendor connection using key pair or password per standards.,Low,DE,F01.1.A.T04,Secrets manager; Snowflake user/role created,Connector authenticated to destination,Connection test passes in vendor UI,,,,
F.01.1.A,F01.1.A.T13,Select tables & columns; PKs and CDC options,Enable required schemas/tables; confirm PKs; enable deletes capture/soft delete; exclude low-value objects.,Medium,SDE,"F01.1.A.T06,F01.1.A.T08",Source owner approvals; PK availability,Connector selection config export,Selection matches inventory; change capture enabled,,,,
F.01.1.A,F01.1.A.T14,Set sync schedule & SLAs,Set an initial sync frequency to meet freshness SLAs; document schedule and offset behavior; define daily window if applicable.,Low,DE,F01.1.A.T05,Business freshness targets; vendor plan limits,Configured schedule; schedule documentation,Schedule meets SLA with buffer,,,,
F.01.1.A,F01.1.A.T15,Run initial load (backfill),Execute historic full load in off-peak window; monitor resource usage; verify counts.,Medium,SDE,"F01.1.A.T13,F01.1.A.T14",Source load tolerance; maintenance window,Initial load completion report,Row counts and checksums match tolerances,,,,
F.01.1.A,F01.1.A.T16,Cutover to CDC,Enable continuous sync; verify CDC behavior; check deletes handling.,Medium,SDE,F01.1.A.T15,Stable initial state; vendor CDC configured,CDC enabled with documented lag metrics,Lag within SLA for 3 consecutive days,,,,
F.01.1.A,F01.1.A.T17,Freshness/latency monitoring,Implement lag queries using source timestamps vs. target; store metrics and alert on threshold breaches.,Medium,SDE,F01.1.A.T16,,Lag dashboard + alerts,Alerts trigger on simulated lag,,,,
F.01.1.A,F01.1.A.T18,Data quality checks,"Implement row-count, PK uniqueness, null checks on critical columns; schedule validations post-sync.",Medium,SDE,F01.1.A.T16,,DQ checks + notifications,All checks passing or documented exemptions,,,,
F.01.1.A,F01.1.A.T19,Integrate with Airflow (start + wait),"Use vendor API/operator to trigger syncs and sensors to wait for completion before downstream tasks (dbt, refreshes).",Medium,SDE,"F01.1.A.T14,F01.1.A.T16",,DAG that triggers/waits on connector,DAG runs end-to-end with gating,Airflow operator + sensor,,,
F.01.1.A,F01.1.A.T20,Scheduling alignment with downstream,Align DAG schedules to connector completion; consider offsets and long runs; avoid overlaps.,Low,SDA,F01.1.A.T19,,Coordinated schedules,No contention; SLAs met,,,,
F.01.1.A,F01.1.A.T21,Operational runbook & incident response,"Document failure modes, re-sync procedures, schema change handling, and contact trees; include vendor support steps.",Low,SDA,F01.1.A.T16,,Runbook in Confluence,Reviewed by ops; on-call briefed,,,,
F.01.1.A,F01.1.A.T22,Knowledge transfer & sign-off,"Deliver walkthrough and handover, including dashboards, DQ results, and runbook.",Low,SDA,F01.1.A.T21,,KT session; recorded demo,Sign-off from client PM and data owner,,,,
F.01.1.A,F01.1.A.T23,Define additional business metadata columns,"Add standardized business metadata columns (e.g., record_source, business_unit, data_sensitivity) to support governance and lineage.",Low,SDA,F01.1.A.T10,Data governance catalog fields,Metadata column spec & DDL,Columns present and populated in target,,,,
F.01.1.A,F01.1.A.T24,Group objects by transactional integrity (from SOURCE FK graph),Persist dependency groupings derived from SOURCE FKs into reference tables; use for parent-first DAG ordering and validation.,Medium,SDE,"F01.1.A.T07,F01.1.A.T11",,REF_DEPENDENCY_GROUPS populated,Downstream DAG uses grouping correctly,,,,
F.01.1.A,F01.1.A.T25,Table selection refinement,Refine enabled table list based on usage analytics and SLA; exclude low-value/high-churn tables; document rationale.,Low,DE,F01.1.A.T16,,Updated selection; change log,Change approved; sync time reduced,,,,
F.01.1.A,F01.1.A.T26,Alert routing & escalation,"Integrate vendor alerts and custom Snowflake checks into clientâ€™s tooling (e.g., Slack, PagerDuty, email).",Low,DE,"F01.1.A.T17,F01.1.A.T18",,Unified alerting with clear ownership,Test alerts reach correct groups,,,,
F.01.1.A,F01.1.A.T27,Cost monitoring dashboard,Track warehouse credits and storage; attribute costs to connector workload; alert on anomalies.,Low,DE,"F01.1.A.T05,F01.1.A.T16",,Cost dashboard,Monthly report generated,,,,
F.01.1.A,F01.1.A.T07a,Automate FK export per source,Implement scripts/queries to extract FK metadata from the SOURCE database on a schedule; persist to reference tables for reproducible builds.,Medium,SDE,F01.1.A.T07,"Read access to SOURCE catalogs (e.g., sys.* / ALL_* / INFORMATION_SCHEMA); service account",Scheduled FK export job; populated REF_DEPENDENCY_* tables,Nightly export refreshes FK metadata without errors,,,,Version outputs to support auditing
F.01.1.A,F01.1.A.T07b,Construct dependency graph from FK rows,"Transform exported FK rows into a directed graph (parent->child), detect cycles/missing PKs, and compute topological layers for load ordering.",Medium,SDE,F01.1.A.T07a,,"Dependency graph, layer assignments",Graph validates with no unresolved nodes,Graph serialized for DAG generation,,,
F.01.1.A,F01.1.A.T19a,Generate DAG constraints from dependency graph,Emit DAG edges so parent tasks complete before children; integrate with Airflow operators/sensors for the vendor connector.,Medium,SDE,"F01.1.A.T19,F01.1.A.T07b",,Airflow DAG section defining upstream/downstream per FK graph,DAG honors parent-first ordering in test runs,Airflow: task groups by dependency layer,,,
F.01.1.A,F01.1.A.T07c,Handle sources without declared FKs,"Infer likely dependencies using naming conventions, index usage, data profiling, and SME input; record as logical dependencies in reference tables.",High,SDA,F01.1.A.T06,SME time; sampling rights on key tables,Documented logical FK map; reference table entries,Approved by application owner; feeds DAG constraints,,,,Mark â€˜logicalâ€™ vs â€˜declaredâ€™ in metadata
